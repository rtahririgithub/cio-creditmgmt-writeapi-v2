server.port=8080

##GCP related
spring.cloud.gcp.project-id=cio-creditmgmt-np-15dfbe
#spring.cloud.gcp.credentials.location=classpath:tmf-api-6769a3cccb52.json
#spring.cloud.gcp.credentials.location=file:C:/DEV/keys/river-surf-297123-49938ab56414.json

#spring.cloud.gcp.secretmanager.project-id=cio-creditmgmt-np-15dfbe
spring.cloud.gcp.secretmanager.enabled=true
spring.cloud.gcp.pubsub.enabled=true

#GCP logging enabled
#spring.cloud.gcp.logging.enabled=true


## spring specific
logging.level.web=ERROR
logging.level.org.springframework=ERROR
logging.level.org.springframework.web=ERROR

#Swagger ui
# /swagger-ui/index.html

## Actuator related
management.endpoints.web.exposure.include=*

management.endpoint.info.enabled=true
management.endpoint.health.enabled=true
management.endpoint.beans.enabled=true
management.endpoint.autoconfig.enabled=true
management.endpoint.mappings.enabled=true
management.endpoint.metrics.enabled=true

management.endpoint.env.enabled=true
management.endpoint.trace.enabled=true
management.endpoint.dump.enabled=true
management.endpoint.loggers.enabled=true
management.endpoint.auditevents.enabled=true

management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true


## Postgres
spring.datasource.url=jdbc:postgresql://localhost:5432/pg_crproflst?currentSchema=crprofl
spring.datasource.username=crproflst_app
#spring.datasource.password=${sm://db-password-it04}
spring.datasource.password=passw0rd
# max connections in pool (concurrent connections)
# set this to (cpu-cores * 2) + 1

# maximum db connections in pool
spring.datasource.hikari.maximum-pool-size=10

# minimum number of idle connections maintained by HikariCP in a connection pool
spring.datasource.hikari.minimum-idle=3

# maximum idle time for connection # 100ms

spring.datasource.hikari.idle-timeout=100  
# maximum number of milliseconds that a client will wait for a connection from pool # 10s
spring.datasource.hikari.connection-timeout=10000 

# maximum lifetime in milliseconds of a connection in the pool after it is closed. 2min
spring.datasource.hikari.max-lifetime=120000 



## Firestore
assesment.collection.name=last_assessment_v1.0_it04

## Crypto
#crypto.keystoreUrl=crypto-keystore-file
#crypto.keyAlias=${sm://crypto-key}
#crypto.keyPassword=${sm://crypto-password}
#crypto.key1=${sm://crypto-key1}
#crypto.key2=${sm://crypto-key2}
#crypto.key3=${sm://crypto-key3}


crypto.keystoreUrl=file:\mnt\tfmsecrets\tfm_keystore.jks
crypto.keyAlias=262372
crypto.keyPassword=20582e2645666529
crypto.key1=EbT5a8Fuq
crypto.key2=aYt2gv6R
crypto.key3=9bFp3Gz4k

## Pubsub
creditmgmt.pubsub.xconv.subscriptionName=x_conv_cust_to_process_it04-sub
creditmgmt.pubsub.capi.subscriptionName=capi-creditchange_v1.0_it04-sub
creditmgmt.pubsub.mergecp.subscriptionName=merge_pubsub_it04-sub
spring.cloud.gcp.pubsub.subscriber.executor-threads=8

auditlog.pubsub.topic=cp-audit_v1.0_it04-tp
cpsync.pubsub.topic=cp-doc-sync_v1.0_it04-tp
creditmgmt.pubsub.asmt.topicName=last-assessment_v1.0_it04-tp
creditprofileevent.pubsub.topicName= creditprofileevent_v1.0_it04-tp
creditprofilemerge.pubsub.topicName=
mdmevent.pubsub.topicName=Party.Customer.CreditInfo

## Misc
auditlog.enabled=true
crypto.decrypt.nullOnError=true

#Allowed client id for Authorization
authorized.client.ids={'4b0b47b1-4b8a-4967-8068-1c894cca76b3', '3e51f0d3-3782-45d3-9fb3-58bafdbc7e3f', '0fa9b490-28e7-497b-a53a-71d66ed4e298'}

#MDM PubSub Connector Configuration
credit.pubsub.connector.pubSubURL=https://enterprisemessagewebk-is02.tsl.telus.com/publisher/publish/ST01.Party.Customer.CreditInfo
credit.pubsub.connector.username=9343
#credit.pubsub.connector.password=${sm://teluspubsub-password}
credit.pubsub.connector.password=LvQX&98B
