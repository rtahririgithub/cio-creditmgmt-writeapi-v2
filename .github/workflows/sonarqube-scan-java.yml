# This is a workflow to run unit tests, report code coverage, and do a sonar scan

name: SonarQube Scan
on:
  push:
    branches: [ main,develop ]
  # pull_request:
  #   branches: [ main,develop ]

jobs:
  prepare:
    if: ${{ !(contains(github.event.head_commit.message, 'initial commit') ||  contains(github.event.head_commit.message, 'Update cookiecutter.yaml')) }}
    permissions:
      contents: 'read'
      id-token: 'write'       
    uses: ./.github/workflows/reusable-pass-for-sonarqube-scan.yml
    secrets:
      gh_idp_project_id: ${{ secrets.GH_IDP_PROJECT_ID }}
      cdo_eptools_helper_project_id: ${{ secrets.CDO_EPTOOLS_HELPER_PROJECT_ID }}
          
  build:
    if: ${{ !(contains(github.event.head_commit.message, 'initial commit') ||  contains(github.event.head_commit.message, 'Update cookiecutter.yaml')) }}
    runs-on: ubuntu-latest
    needs: prepare

    permissions:
      contents: write
      issues: read
      checks: write
      pull-requests: write    
    
    steps:
      # Set up and store the SONAR_TOKEN
      - id: 'retrieve'
        run: |-
          VAR_FOLDER="tmp_$GITHUB_RUN_ID"
          echo ::set-output name=path::$VAR_FOLDER   
      - uses: actions/download-artifact@v3
        with:
          name: latest
          path: ${{ steps.retrieve.outputs.path }}    

      - id: 'set-a-secret'
        run: |- 
          SECRET_VALUE="$(cat ${{ steps.retrieve.outputs.path }}/latest.txt)"
          echo ::add-mask::$SECRET_VALUE          
          echo ::set-output name=secretvalue::$SECRET_VALUE 
      - name: Clean up
        run: rm -rf ${{ steps.retrieve.outputs.path }}

      - uses: geekyeggo/delete-artifact@v1
        with:
          name: latest

      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
          cache: Maven

      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      #  execute SonarCloud code analysis 
      - name: Build and analyze
        run: |
          mvn test -Dmaven.test.skip=true \
          org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
          -Dsonar.host.url=https://sonarqube.cloudapps.telus.com \
          -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
        env:
          SONAR_TOKEN: ${{ steps.set-a-secret.outputs.secretvalue }}

#      - name: Jacoco Report
#        id: jacoco
#        uses: madrapps/jacoco-report@v1.2
#        with:
#          paths: target/site/jacoco/jacoco.xml
#          token: ${{ secrets.GITHUB_TOKEN }}

      - name: JaCoCo Code Coverage Report
        uses: codecov/codecov-action@v1
        with:
          file: target/site/jacoco/jacoco.xml
          name: codecov
                    
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          files: "target/surefire-reports/*.xml"
          report_individual_runs: "true"
